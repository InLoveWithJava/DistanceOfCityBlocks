/**
 * –ö–ª–∞—Å—Å –∑–¥–∞–Ω–∏—è, –æ–±–æ–∑–Ω–∞—á–∞–µ—Ç—Å—è 'H' –≤ –∫–æ–Ω—Å–æ–ª–µ –∏ 'üè†' –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏
 */

public class Building extends BaseObject {
    // –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–¥–∞–Ω–∏–π
    private static int quantity;
    // –º–∞—Å–∫–∞ –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –∑–¥–∞–Ω–∏–π
    private static int[][] matrix = {
            {0, 0, 0},
            {0, 1, 0},
            {0, 0, 0}
    };

    public Building(int x, int y) {
        super(x, y);
        quantity++;
    }

    @Override
    void draw(Canvas canvas) {
        canvas.drawMatrix(x, y, matrix, 'H');
    }

    public static int getQuantity() {
        return quantity;
    }

    public static int[][] getMatrix() {
        return matrix;
    }

    public static void setQuantity(int quantity) {
        Building.quantity = quantity;
    }

    public static void setMatrix(int[][] matrix) {
        Building.matrix = matrix;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null || this.getClass() != obj.getClass()) return false;
        Building building = (Building) obj;
        return (building.getX() == this.getX() && building.getY() == this.getY());
    }
}
